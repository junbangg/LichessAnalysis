rating_black_wins <- rating_white[sample(nrow(rating_white),5000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = "White", color = white_rating))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("orangered","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)),
subtitle = "p-value < 0.05")
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = winner, color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("orangered","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)),
subtitle = "p-value < 0.05")
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("orangered","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("orangered","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkgray","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkred","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
rating_white_wins <- rating_white[sample(nrow(rating_white),1000),]
rating_black_wins <- rating_white[sample(nrow(rating_white),1000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
rating_white_wins <- rating_white[sample(nrow(rating_white),2000),]
rating_black_wins <- rating_white[sample(nrow(rating_white),1000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
rating_white_wins <- rating_white[sample(nrow(rating_white),3000),]
rating_black_wins <- rating_white[sample(nrow(rating_white),1000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
% select(winner, white_rating, black_rating)
rating_white_wins <- rating_white[sample(nrow(rating_white),2500),]
rating_black_wins <- rating_white[sample(nrow(rating_white),1000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkred","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
rating_white_wins <- rating_white[sample(nrow(rating_white),2500),]
rating_black_wins <- rating_white[sample(nrow(rating_white),5000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkred","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
rating_white_wins <- rating_white[sample(nrow(rating_white),5000),]
rating_black_wins <- rating_white[sample(nrow(rating_white),5000),]
#shapiro
shapiro.test(rating_white_wins$white_rating)
shapiro.test(rating_white_wins$black_rating)
shapiro.test(rating_black_wins$white_rating)
shapiro.test(rating_black_wins$black_rating)
#pearson
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "pearson")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "pearson")
#kendall
cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "kendall")
cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "kendall")
#spearman
hypo1 <- cor.test(rating_white_wins$white_rating, rating_white_wins$black_rating, method = "spearman")
hypo2 <- cor.test(rating_black_wins$white_rating, rating_black_wins$black_rating, method = "spearman")
hypo1
hypo2
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
ggplot(rating_black_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkred","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "gray40", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "green", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
options(repr.plot.width = 15, repr.plot.height = 8)
ggplot(rating_white_wins, aes(white_rating, black_rating, label = 'W', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "red", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkblue","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo1$estimate, digits = 2)))
ggplot(rating_black_wins, aes(white_rating, black_rating, label = 'B', color = winner))+
geom_text()+
theme_minimal()+
theme(legend.position = "bottom")+
geom_jitter(alpha = 0.3, size = 2.5, width = 0.3, height = 0.3)+
geom_smooth(method = "lm", color = "blue", lty = 2, se = FALSE, size = 0.6)+
scale_color_manual(values = c("darkred","steelblue"))+
labs(title = paste("Spearman Correlation Coefficient:", round(hypo2$estimate, digits = 2)))
library(ggpubr)
library(broom)
library(AICcmodavg)
install.packages(c(ggpubr", "broom", "AICcmodavg"))
install.packages(c("ggpubr", "broom", "AICcmodavg"))
install.packages(c("broom", "AICcmodavg"))
install.packages("AICcmodavg")
library(dplyr)
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(broom)
library(AICcmodavg)
require(ggplot2)
require(stringr)
require(dplyr)
install.packages("ggpubr")
library(dplyr)
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(broom)
library(AICcmodavg)
require(ggplot2)
require(stringr)
require(dplyr)
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name)
opening_black <- data %>% filter(winner == "black") %>% select(winner, white_rating, black_rating, opening_name)
View(opening_black)
one.way <- aov(white_rating ~ opening_name, data = opening_white)
summary(one.way)
one.way <- aov(black_rating ~ white_rating, data = opening_white)
summary(one.way)
when_white_wins <- aov(white_rating ~ opening_name, data = opening_white)
summary(when_white_wins)
data %>%
mutate(firstMove = str_sub(moves, 1, 2))
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name, first_move)
opening_black <- data %>% filter(winner == "black") %>% select(winner, white_rating, black_rating, opening_name, first_move)
opening_white <- data %>%
filter(winner == "white") %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
select(winner, white_rating, black_rating, opening_name, first_move)
opening_white <- data %>%
filter(winner == "white") %>%
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
select(winner, white_rating, black_rating, opening_name, mutate(firstMove = str_sub(moves, 1, 2)))
View(data)
test <- data %>% filter(winner == "white")
View(test)
opening_white <- data %>%
filter(winner == "white") %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
View(opening_white)
test <- data %>% mutate(firstMove = str_sub(moves, 1, 2))
View(test)
test <- data %>% mutate(firstMove = str_sub(moves, 1, 2))
View(test)
View(test)
View(test)
opening_white <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
#Anova
opening_white <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, mutate(firstMove = str_sub(moves, 1, 2)))
opening_white <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, firstMove)
#Anova
opening_white <- data %>%
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, str_sub(moves, 1, 2) as firstMove)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, str_sub(moves, 1, 2) as firstMove)
opening_black <- data %>%
filter(winner == "black") %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
select(winner, white_rating, black_rating, opening_name, first_move)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name, str_sub(moves, 1, 2) as firstMove)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name, str_sub(moves, 1, 2) as firstMove)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name
library(dplyr)
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(broom)
library(AICcmodavg)
require(ggplot2)
require(stringr)
require(dplyr)
#read data
data <- read.csv("../Data/games.csv")
head(data, 5)
dim(data)
library(dplyr)
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(broom)
library(AICcmodavg)
require(ggplot2)
require(stringr)
require(dplyr)
#read data
data <- read.csv("../Data/games.csv")
head(data, 5)
dim(data)
#read data
data <- read.csv("../Data/games.csv")
setwd("~/Desktop/Lichess Analysis/Source")
#read data
data <- read.csv("../Data/games.csv")
#read data
data <- read.csv("../Data/games.csv")
library(dplyr)
library(tidyverse)
library(gridExtra)
library(ggpubr)
library(broom)
library(AICcmodavg)
require(ggplot2)
require(stringr)
require(dplyr)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>% filter(winner == "white") %>% select(winner, white_rating, black_rating, opening_name)
opening_black <- data %>%
filter(winner == "black") %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
select(winner, white_rating, black_rating, opening_name, first_move)
opening_black <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "black") %>%
select(winner, white_rating, black_rating, opening_name, first_move)
opening_black <- data %>%
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "black") %>%
select(winner, white_rating, black_rating, opening_name, str_sub(moves, 1, 2))
opening_black <- data %>%
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "black") %>%
select(winner, white_rating, black_rating, opening_name, firstMoves=str_sub(moves, 1, 2))
opening_black <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "black") %>%
select(winner, white_rating, black_rating, opening_name)
opening_black <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "black") %>%
select(winner, white_rating, black_rating, opening_name, firstMove)
opening_white <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, firstMove)
when_white_wins <- aov(white_rating ~ firstMove, data = opening_white)
summary(when_white_wins)
when_black_wins <- aov(white_rating ~ opening_name, data = opening_white)
summary(when_black_wins)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, firstMove) %>%
head(100)
when_white_wins <- aov(white_rating ~ firstMove, data = opening_white)
summary(when_white_wins)
#mutate(firstMove = str_sub(moves, 1, 2)) %>%
#Anova
opening_white <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "white") %>%
select(winner, white_rating, black_rating, opening_name, firstMove) %>%
opening_black <- data %>%
mutate(firstMove = str_sub(moves, 1, 2)) %>%
filter(winner == "black") %>%
select(winner, white_rating, black_rating, opening_name, firstMove)
when_white_wins <- aov(white_rating ~ firstMove, data = opening_white)
summary(when_white_wins)
when_black_wins <- aov(white_rating ~ opening_name, data = opening_white)
summary(when_black_wins)
when_white_wins <- aov(black_rating ~ white_rating, data = opening_white)
summary(when_white_wins)
when_black_wins <- aov(white_rating ~ black_raing, data = opening_white)
summary(when_black_wins)
when_black_wins <- aov(white_rating ~ black_rating, data = opening_white)
summary(when_black_wins)
when_white_wins <- aov(black_rating ~ white_rating, data = opening_white)
summary(when_white_wins)
when_black_wins <- aov(white_rating ~ black_rating, data = opening_white)
summary(when_black_wins)
